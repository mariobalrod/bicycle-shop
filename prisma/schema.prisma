// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum UserRole {
    ADMIN
    USER
}

model User {
    id        String   @id @default(cuid())
    email     String   @unique
    role      UserRole @default(USER)
    name      String?
    password  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum ProductType {
    BICYCLE
    SKI
    SURFBOARD
    ROLLER_SKATE
    ACCESSORY
}

model Category {
    id          String    @id @default(cuid())
    name        String
    slug        String    @unique
    description String?
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    products    Product[]
}

model Product {
    id          String            @id @default(cuid())
    name        String            @unique
    slug        String            @unique
    imageUrl    String
    description String?
    price       Float
    type        ProductType
    hasStock    Boolean           @default(true)
    createdAt   DateTime          @default(now())
    updatedAt   DateTime          @updatedAt
    category    Category          @relation(fields: [categoryId], references: [id], onDelete: Cascade)
    categoryId  String
    properties  ProductProperty[]
}

model ProductProperty {
    id        String                  @id @default(cuid())
    name      String
    options   ProductPropertyOption[]
    createdAt DateTime                @default(now())
    updatedAt DateTime                @updatedAt
    productId String
    product   Product                 @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ProductPropertyOption {
    id                 String                  @id @default(cuid())
    name               String
    createdAt          DateTime                @default(now())
    updatedAt          DateTime                @updatedAt
    propertyId         String
    hasStock           Boolean                 @default(true)
    property           ProductProperty         @relation(fields: [propertyId], references: [id], onDelete: Cascade)
    // Options that this option is incompatible with
    // Example: If this is "Disc Brake", this field would contain "Aluminum Wheel"
    incompatibleWith   ProductPropertyOption[] @relation("IncompatibleOptions")
    // Options that are incompatible with this option
    // Example: If this is "Aluminum Wheel", this field would contain "Disc Brake"
    incompatibleWithMe ProductPropertyOption[] @relation("IncompatibleOptions")
}
