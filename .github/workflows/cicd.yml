name: CI/CD
concurrency:
  group: CICD-${{ github.head_ref }}

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:
  Setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          cache-dependency-path: './pnpm-lock.yaml'

      - name: 📦 Install dependencies
        shell: bash
        run: |
          pnpm install --no-frozen-lockfile
          pnpm install

  Storybook:
    if: ${{ (github.event_name == 'pull_request' || github.event_name == 'push') && (github.ref != 'refs/heads/develop' )}}
    name: Build Storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          cache-dependency-path: './pnpm-lock.yaml'

      - name: 📦 Install dependencies
        shell: bash
        run: |
          pnpm install --no-frozen-lockfile
          pnpm install

      - name: 🌸 Build Storybook
        run: pnpm build:storybook

  Lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          cache-dependency-path: './pnpm-lock.yaml'

      - name: 📦 Install dependencies
        shell: bash
        run: |
          pnpm install --no-frozen-lockfile
          pnpm install

      - name: 🗄️ Generate Database
        run: pnpm db:generate

      - name: 💅 Lint project
        run: pnpm lint

  Test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          cache-dependency-path: './pnpm-lock.yaml'

      - name: 📦 Install dependencies
        shell: bash
        run: |
          pnpm install --no-frozen-lockfile
          pnpm install

      - name: 🗄️ Generate Database
        run: pnpm db:generate

      - name: 🧪 Test
        run: pnpm test

  Deploy:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
    name: Deploy Vercel
    runs-on: ubuntu-latest
    needs: [Setup, Lint, Test]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          cache-dependency-path: './pnpm-lock.yaml'

      - name: 📦 Install dependencies
        shell: bash
        run: pnpm install

      - name: Deploy Step Production
        uses: amondnet/vercel-action@v20
        id: deploy-vercel-production
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          vercel-args: '--prod'
